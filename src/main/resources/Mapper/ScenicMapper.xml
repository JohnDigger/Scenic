<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.ScenicMapper">

    <select id="getByIdPlus" resultType="com.example.model.Scenic">
       select * from scenic where id=#{id} UNION select * from scenic where id &lt;&gt; #{id}
    </select>
    <select id="queryMsg" resultType="com.example.model.Scenic">
        select * from scenic limit ${(page-1)*limit},${limit}
    </select>
    <select id="getList" resultType="com.example.model.Scenic">
        select * from scenic
    </select>
    <select id="searchAllByName" resultType="com.example.model.Scenic">
        SELECT * from scenic WHERE name LIKE "%"#{name}"%"
    </select>
    <select id="getMoney" resultType="com.example.model.Audio">
        select audio_id,scenic_id,scenic_name, CONCAT(audio_name," ",audio_money,"å…ƒ") as audio_name_and_money from audio where scenic_id = #{scenicId}
    </select>
    <select id="getAudio" resultType="com.example.model.Scenic" >
        SELECT scenic.id,scenic.`name`,scenic.list,scenic.picture_path,scenic.video_path,scenic.text,audio.audio_id,audio.scenic_name,audio.audio_url,audio.audio_name,audio.audio_money FROM scenic,audio WHERE scenic.id = audio.scenic_id AND audio.audio_id = #{audioId}
    </select>
    <select id="searchScenic" resultType="com.example.model.Scenic">
        select * from scenic where name LIKE "%"#{name}"%"
    </select>
    <select id="getUserBuyMsg" resultType="com.example.model.TBuy">
        select b.* from t_buy b,t_user u where u.open_id=#{openId} and u.user_id = b.user_id
    </select>
    <select id="getUserByOpenId" resultType="com.example.model.TUser">
        select * from t_user u where u.open_id = #{openId}
    </select>
    <select id="getScenicByType" resultType="com.example.model.Scenic">
         select * from scenic where type=#{type}
    </select>
    <select id="getPage" resultType="com.example.model.Scenic">
        SELECT * FROM scenic ORDER BY id LIMIT #{start}, #{num};
    </select>
    <select id="getCount" resultType="java.lang.Integer">
        select count(*) from scenic
    </select>
    <select id="queryAllByName" resultType="java.lang.Integer">
        select id from scenic where name  = #{name}
    </select>


    <insert id="InsertScenic"  parameterType="com.example.model.Scenic" useGeneratedKeys="true" keyProperty="id"  >
        INSERT INTO scenic(name,list,picture_path,video_path,text,scenic_type) VALUES (#{name},#{list},#{picturePath},#{videoPath},#{text},#{scenicType})
    </insert>
    <insert id="insertMsg" useGeneratedKeys="true" keyProperty="com.example.model.Scenic.id">
        insert into scenic value #(scenic_type),#(name),#(list),#(picturePath),#(videoPath),#(text)
    </insert>
    <insert id="saveUserBuyMsg">
        INSERT INTO t_buy(scenic_id,scenic_name,user_id,nick_name,audio_id,audio_name,audio_money,buy_time)
        SELECT scenic_id,scenic_name,u.user_id,u.nick_name,audio_id,audio_name,audio_money,now()
        FROM audio,t_user u
        WHERE audio_id = #{audioId} AND u.open_id = #{openId}
    </insert>
    <insert id="saveUserMsg">
        insert into t_user(nick_name,open_id,date) values (#{nickName},#{openId},now())
    </insert>


    <update id="updatePicById">
        update scenic set picture_path = #{picture_path} where id = #{id}
    </update>
    <update id="updateAudioPathById">
        update scenic set audio_path = #{audio_path} where id = #{id}
    </update>
    <update id="updateByName">
        update scenic set picture_path = #{picture_path} where name = #{name}
    </update>
    <update id="updateAudioPathByName">
        update scenic set audio_path = #{audio_path} where name = #{name}
    </update>
    <update id="updateVideo_pathInt">
        update scenic set video_path = #{video_path} where name = #{name}
    </update>


</mapper>